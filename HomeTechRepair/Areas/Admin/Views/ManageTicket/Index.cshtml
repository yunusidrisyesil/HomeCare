@*@{

    List<object> commands = new List<object>();
    commands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
    commands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });
    commands.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-update", cssClass = "e-flat" } });
    commands.Add(new { type = "Cancel", buttonOption = new { iconCss = "e-icons e-cancel-icon", cssClass = "e-flat" } });

}
@{
    var DropDownList = new Syncfusion.EJ2.DropDowns.DropDownList()
    {
        DataSource = ViewBag.DropDownData,
        Query = "new ej.data.Query()",
        AllowFiltering = true,
        Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "id", Text = "text" }
    };
}

<div class="control-section">
    <ejs-grid id="Grid" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" allowPaging="true">
        <e-data-manager url="/api/ManageTicketApi/Get" adaptor="WebApiAdaptor" insertUrl="/Home/Insert" updateUrl="/api/ManageTicketApi/Update" removeUrl="/Home/Delete"></e-data-manager>
        <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog"></e-grid-editSettings>
        <e-grid-pagesettings pageCount="5 "></e-grid-pagesettings>
        <e-grid-columns>
            <e-grid-column field="id" headerText="Ticket ID" textAlign="Right" width="120"></e-grid-column>
            <e-grid-column field="description" headerText="Description" width="150"></e-grid-column>
            <e-grid-column field="createdDate" headerText="Created Date" width="130" textAlign="Right" format="yMd"></e-grid-column>
            <e-grid-column field="appointmentDate" headerText="Appointment Date" editType="datepickeredit" width="120" format="yMd"></e-grid-column>
            <e-grid-column field="resolutionDate" headerText="Resolution Date" editType="datepickeredit" width="120" format="yMd"></e-grid-column>
            <e-grid-column field="doctorId" headerText="Doctor" width="120" editType="dropdownedit" edit="new {@params = DropDownList}"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
</div>

@section Scripts{

        <script>
            $(document).ready(function() {
            console.log("Jquery OKa");
        });
        </script>
    }

*@

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="account-content">
                    <div class="row align-items-center justify-content-center">
                        <div class="col-md-12 col-lg-6 login-right">
                            <div id="dxGrid"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
<script src="~/vendor/devextreme-aspnet-data/js/dx.aspnet.data.js"></script>
<script>
    var dataGrid = null;
    $(() => {
        var url = '../../../api/ManageTicketApi';
        dataGrid = $("#dxGrid").dxDataGrid({
            remoteOperations: { paging: true, filtering: true, sorting: true, grouping: true, summary: true, groupPaging: true },
            dataSource: DevExpress.data.AspNet.createStore({
                key: 'Id',
                loadUrl: `${url}/get`,
                updateUrl: `${url}/update`,
                insertUrl: `${url}/insert`,
                deleteUrl: `${url}/delete`,
                onBeforeSend(method, ajaxOptions) {
                    ajaxOptions.xhrFields = { withCredentials: true };
                    console.log(method);
                    console.log(ajaxOptions);
                }
            }),
            editing: {
                mode: 'form',
                allowUpdating: true,
                allowAdding: true,
                allowDeleting: true
            },
            allowColumnResizing: true,
            showColumnLines: true,
            showRowLines: true,
            rowAlternationEnabled: true,
            showBorders: true,
            searchPanel: {
                visible: true,
                width: 240,
                placeholder: "Search..."
            },
            filterRow: {
                visible: true,
                applyFilter: "auto"
            },
            headerFilter: {
                visible: true
            },
            export: {
                enabled: true,
                fileName: `Tüm Üyelikler_${parseInt(Math.random() * 1000000000)}`,
                allowExportSelectedData: true
            },
            paging: {
                pageSize: 20
            },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [5, 15, 30, 45],
                showInfo: true
            },
            selection: {
                mode: "multiple"
            },
            columns : [
                {
                    caption: 'Id',
                    dataField: "id",
                    visible: false,
                    allowFiltering: false,
                    formItem: { visible: false }
                },
                {
                    caption: 'Patient',
                    dataField: "Patient"
                },
                {
                    caption: 'Description',
                    dataField: "Description"
                },
                {
                    caption: 'Ay',
                    dataField: "month",
                    dataType: "number"
                },
                {
                    caption: 'Fiyat',
                    dataField: "price",
                    dataType: "number",
                    format : "#.## TL"
                },
                {
                    dataField : "CreatedDate",
                    caption: "CreatedDate",
                    dataType: "datetime",
                    format: 'dd/MM/yyyy HH:mm',
                }
                {
                    dataField : "AppointmentDate",
                    caption: "AppointmentDate",
                    dataType: "datetime",
                    format: 'dd/MM/yyyy HH:mm',
                }
                                {
                    dataField : "ResolutionDate",
                    caption: "ResolutionDate",
                    dataType: "datetime",
                    format: 'dd/MM/yyyy HH:mm',
                }
                ]
        }).dxDataGrid("instance");
    });
</script>

}